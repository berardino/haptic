// generated by Fast Light User Interface Designer (fluid) version 1.0100

#ifndef US3DTouchGUI_h
#define US3DTouchGUI_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Progress.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Output.H>
#include "vtkFlRender.h"

class US3DTouchGui {
public:
  US3DTouchGui();
  Fl_Window *m_CWnd;
private:
  inline void cb_Load_i(Fl_Button*, void*);
  static void cb_Load(Fl_Button*, void*);
public:
  Fl_Progress *m_CProgress;
  Fl_Value_Slider *m_COpacity;
private:
  inline void cb_m_COpacity_i(Fl_Value_Slider*, void*);
  static void cb_m_COpacity(Fl_Value_Slider*, void*);
public:
  Fl_Value_Slider *m_CProxyRadius;
private:
  inline void cb_m_CProxyRadius_i(Fl_Value_Slider*, void*);
  static void cb_m_CProxyRadius(Fl_Value_Slider*, void*);
public:
  Fl_Light_Button *m_COBBTreeView;
private:
  inline void cb_m_COBBTreeView_i(Fl_Light_Button*, void*);
  static void cb_m_COBBTreeView(Fl_Light_Button*, void*);
public:
  Fl_Output *m_CNCells;
  Fl_Light_Button *m_COBBTreeSurfaceType;
private:
  inline void cb_m_COBBTreeSurfaceType_i(Fl_Light_Button*, void*);
  static void cb_m_COBBTreeSurfaceType(Fl_Light_Button*, void*);
public:
  Fl_Value_Slider *m_COBBTreeOpacity;
private:
  inline void cb_m_COBBTreeOpacity_i(Fl_Value_Slider*, void*);
  static void cb_m_COBBTreeOpacity(Fl_Value_Slider*, void*);
public:
  Fl_Value_Slider *m_COBBTreeLevel;
private:
  inline void cb_m_COBBTreeLevel_i(Fl_Value_Slider*, void*);
  static void cb_m_COBBTreeLevel(Fl_Value_Slider*, void*);
public:
  vtkFlRender *m_CRender;
  Fl_Group *m_CHapticTab;
  Fl_Output *m_CPhantomProxy_X;
  Fl_Output *m_CPhantomProxy_Y;
  Fl_Output *m_CPhantomProxy_Z;
  Fl_Output *m_CPhantomSCP_X;
  Fl_Output *m_CPhantomSCP_Y;
  Fl_Output *m_CPhantomSCP_Z;
  Fl_Light_Button *m_CServoLoop;
private:
  inline void cb_m_CServoLoop_i(Fl_Light_Button*, void*);
  static void cb_m_CServoLoop(Fl_Light_Button*, void*);
public:
  Fl_Output *m_CPhantomAngle_X;
  Fl_Output *m_CPhantomAngle_Y;
  Fl_Output *m_CPhantomAngle_Z;
  Fl_Output *m_CInOut;
  Fl_Output *m_CUpdateRate;
  Fl_Output *m_CPhantomVelocity_X;
  Fl_Output *m_CPhantomVelocity_Y;
  Fl_Output *m_CPhantomVelocity_Z;
  Fl_Output *m_CPhantomForce_X;
  Fl_Output *m_CPhantomForce_Y;
  Fl_Output *m_CPhantomForce_Z;
  Fl_Output *m_CPhantomDelta;
  Fl_Output *m_CPhantomForceSize;
  Fl_Value_Slider *m_CDamping;
private:
  inline void cb_m_CDamping_i(Fl_Value_Slider*, void*);
  static void cb_m_CDamping(Fl_Value_Slider*, void*);
public:
  Fl_Value_Slider *m_CElastic;
private:
  inline void cb_m_CElastic_i(Fl_Value_Slider*, void*);
  static void cb_m_CElastic(Fl_Value_Slider*, void*);
public:
  virtual void Load();
  virtual void SetServoLoop();
  virtual void SetOpacity();
  virtual void SetProxyRadius();
  virtual void SetOBBTreeView();
  virtual void SetOBBTreeSurfaceType();
  virtual void SetOBBTreeOpacity();
  virtual void SetOBBTreeLevel();
  virtual void SetDamping();
  virtual void SetElastic();
};
#endif
